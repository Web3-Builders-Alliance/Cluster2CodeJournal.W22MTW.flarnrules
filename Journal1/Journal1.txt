My Capstone project "Sentry Nodes" is an nft project.

I will need to understand nfts in CosmWasm.

I found the CosmWasm/cw-nfts folder on github and looked in the contracts folder

The contracts folder has the following contracts:

- cw2981-royalties
- cw721-base
- cw721-fixed-price
- cw721-metadata-onchain
- cw721-non-transferable

I think based on the names - cw721-metadata-onchain will be an important contract to start with

This code journal will investigate that contract:

The readme indicates that:

"NFT creators may want to store their NFT metadata on-chain so other contracts are able to interact with it. With CW721-Base in CosmWasm, we allow you to store any data on chain you wish, using a generic extension: T."

Here's the code for the contract in the README.md file:
==============================================
#[derive(Serialize, Deserialize, Clone, PartialEq, JsonSchema, Debug)]
pub struct Trait {
    pub display_type: Option<String>,
    pub trait_type: String,
    pub value: String,
}

#[derive(Serialize, Deserialize, Clone, PartialEq, JsonSchema, Debug)]
pub struct Metadata {
    pub image: Option<String>,
    pub image_data: Option<String>,
    pub external_url: Option<String>,
    pub description: Option<String>,
    pub name: Option<String>,
    pub attributes: Option<Vec<Trait>>,
    pub background_color: Option<String>,
    pub animation_url: Option<String>,
    pub youtube_url: Option<String>,
}

pub type Extension = Option<Metadata>;
======================================

In particular, the fields defined conform to the properties supported in the OpenSea Metadata Standard.

This means when you query NftInfo{name: "Enterprise"}, you will get something like:

{
  "name": "Enterprise",
  "token_uri": "https://starships.example.com/Starship/Enterprise.json",
  "extension": {
    "image": null,
    "image_data": null,
    "external_url": null,
    "description": "Spaceship with Warp Drive",
    "name": "Starship USS Enterprise",
    "attributes": null,
    "background_color": null,
    "animation_url": null,
    "youtube_url": null
  }
}
========================

So there's two different structs:
Trait
and
Metadata

========================

Let's look at a couple of the other CW721 contracts

========================

CW721-base

In the CW721-base there is a link to the CW721 Spec: Non Fungible Tokens.

CW721 is a specification for non-fungible tokens based on CosmWasm. This is based on the Ethereum ERC721 standard, but with some enhacments.

The types can be imported by contracts that wish to implement this spec, or by contracts that call to any standard CW721 contract.

The specification is split into multiple sections:

Base - This is needed
    - Messages
    - Queries
    - Receiver

Metadata - This is optional
    - Queries

Enumerable - This is optional
    - Queries
